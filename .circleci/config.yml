version: 2
jobs:
  build:
    working_directory: /dev/shm/solidus
    environment:
      SOLIDUS_RAISE_DEPRECATIONS: true
    docker:
      - image: circleci/ruby:2.3.3-node-browsers
        environment:
          RAILS_ENV: test
          RACK_ENV: test
          PGHOST: 127.0.0.1
          BUNDLE_PATH: ~/solidus/vendor/bundle
      - image: circleci/postgres:9.6.2-alpine
    parallelism: 3
    steps:
      - checkout

      - restore_cache:
          name: Restore bundle cache
          keys:
            - solidus-bundle-{{ checksum "Gemfile.lock" }}
            - solidus-bundle

      - run:
          name: Install dependencies
          command: |
            bundle check --path=$BUNDLE_PATH || bundle install --path=$BUNDLE_PATH --jobs 4 --retry 3
            mkdir -p $BUNDLE_PATH
            ln -s /dev/shm/solidus/bin/bundle $BUNDLE_PATH

      - run:
          name: Install postgresql client
          command: |
            sudo apt-get update
            sudo apt-get install postgresql-client

      - run:
          name: Install PhantomJS
          command: |
            [ -f /usr/local/bin/phantomjs ] || wget -O /tmp/phantomjs.tar.bz2 https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-2.1.1-linux-x86_64.tar.bz2
            [ -f /usr/local/bin/phantomjs ] || tar -xjf /tmp/phantomjs.tar.bz2 -C /tmp
            [ -f /usr/local/bin/phantomjs ] || sudo mv /tmp/phantomjs-2.1.1-linux-x86_64/bin/phantomjs /usr/local/bin/phantomjs

      - save_cache:
          name: Store bundle cache
          key: solidus-bundle-{{ checksum "Gemfile.lock" }}
          paths:
            - $BUNDLE_PATH

      - save_cache:
          name: Store bundle cache
          key: solidus-bundle
          paths:
            - $BUNDLE_PATH

      - run:
          name: Setup database
          command: |
            bundle exec rake db:create
            bundle exec rake db:schema:load --trace

      - run:
          name: Parallel RSpec
          command: |
            circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings | xargs bundle exec rspec --format progress --format RspecJunitFormatter -o tmp/test-results/rspec.xml

      - store_artifacts:
          path: tmp/capybara

      - store_test_results:
          path: tmp/test-results
          destination: test-results

  push_image:
    docker:
      - image: google/cloud-sdk:latest
    steps:
      - run:
          name: Decode Google Cloud Credentials
          command: |
            echo ${GOOGLE_AUTH} | base64 -i --decode > ${HOME}/gcp-key.json
            gcloud auth activate-service-account --key-file ${HOME}/gcp-key.json
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}

workflows:
  version: 2
  build_and_push:
    jobs:
      - build
      - push_image

# 
# # create a alpine-based build container to ensure that the ruby gems with C-bindings are compiled with musil instead of libc.  
#
# Build a docker image that contains a working solidus shop but no build tools for it. Only things we need at runtime.
# It should be based on alpine and generate no files on its own but rather copy the generated files from the build-container.
#
# Push the image to Google Container Registry using at least the git hash as a label and maybe additional ones.
#
# Tell the Kubernetes cluster to create a kubernetes-deployment that uses the previously built-and-pushed container image.
# Also define a service and an ingress controller that points to the pods created to the deployment.
#

