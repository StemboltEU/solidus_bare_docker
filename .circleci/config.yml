version: 2
jobs:
  build:
    working_directory: ~/solidus
    docker:
      - image: google/cloud-sdk:latest
    steps:
      - checkout

      - setup_remote_docker:
          version: 17.06.1-ce

      - restore_cache:
          name: Restore Dockerfile.build checksum
          keys:
            - build-image-{{ checksum "Dockerfile.build" }}

      - run:
          name: Check if build image has changed
          command: |
            if [ -f dockerfile-build-checksum.txt ] && [ "$(md5sum -c dockerfile-build-checksum.txt)" == "Dockerfile.build: OK" ]
            then
              echo "Dockerfile.build has not changed. Continuing."
            else
              echo "Dockerfile.build has changed. Must build and push build image before continuing."
              ./scripts/build-and-push-build-image.sh
            fi

      - run:
          name: Save Dockerfile.build checksum
          command: eval md5sum Dockerfile.build > dockerfile-build-checksum.txt

      - save_cache:
          name: Save Dockerfile.build version
          key: build-image-{{ checksum "Dockerfile.build" }}
          paths:
            - dockerfile-build-checksum.txt

  run_tests:
    working_directory: ~/solidus
    environment:
      SOLIDUS_RAISE_DEPRECATIONS: true
    docker:
      - image: ${HOSTNAME}/${GOOGLE_PROJECT_ID}/solidus-build
        auth:
          username: _json_key
          password: $GOOGLE_CONTAINER_REGISTRY_AUTH
        environment:
          RAILS_ENV: test
          RACK_ENV: test
          PGHOST: 127.0.0.1
      - image: circleci/postgres:9.6.2-alpine
        command: -c fsync=off -c full_page_writes=off
    steps:
      - checkout

      - restore_cache:
          name: Restore bundle cache
          keys:
            - solidus-bundle-v1-{{ checksum "Gemfile.lock" }}

      - run:
          name: Install dependencies
          command: |
            bundle check --path=vendor/bundle || bundle install --path=vendor/bundle --jobs 4 --retry 3

      - persist_to_workspace:
          root: .
          paths:
            - vendor/bundle

      - save_cache:
          name: Store bundle cache
          key: solidus-bundle-v1-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - run:
          name: Setup database
          command: |
            bundle exec rake db:create
            bundle exec rake db:schema:load --trace

      - run:
          name: Run rspec in parallel
          command: |
            bundle exec rspec --profile 10 \
                              --format progress \
                              --format RspecJunitFormatter \
                              -o tmp/test-results/rspec-#{$CIRCLE_NODE_INDEX}.xml \
                              $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)

      - store_artifacts:
          path: tmp/capybara

      - store_test_results:
          path: tmp/test-results

  build_and_push_runtime_image:
    working_directory: ~/solidus
    docker:
      - image: google/cloud-sdk:latest
    steps:
      - checkout

      - attach_workspace:
          at: .

      - setup_remote_docker:
          version: 17.06.1-ce

      - run:
          name: Install Docker client
          command: |
            set -x
            VER="17.06.1-ce"
            curl -L -o /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin

      - run:
          name: Build runtime Docker image
          command: |
            docker build -t ${HOSTNAME}/${GOOGLE_PROJECT_ID}/solidus-runtime:${CIRCLE_SHA1} \
                         -f Dockerfile.runtime .

      - run:
          name: Authenticate with Google Container Registry Credentials
          command: |
            echo ${GOOGLE_CONTAINER_REGISTRY_AUTH} > ${HOME}/gcp-key.json
            gcloud auth activate-service-account --key-file ${HOME}/gcp-key.json
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}

      - run:
          name: Push docker image to Google Container Registry
          command: gcloud docker -- push ${HOSTNAME}/${GOOGLE_PROJECT_ID}/solidus-runtime:${CIRCLE_SHA1}

  deploy:
    docker:
      - image: google/cloud-sdk:latest
    steps:
      - checkout

      - run:
          name: Decode and authenticate with Google Container Engine Credentials
          command: |
            echo ${GOOGLE_CONTAINER_ENGINE_AUTH} | base64 -i --decode > ${HOME}/gcp-key.json
            gcloud auth activate-service-account --key-file ${HOME}/gcp-key.json
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            gcloud container clusters get-credentials ${CLUSTER_NAME} --zone ${ZONE} --project ${GOOGLE_PROJECT_ID}

      - run:
          name: Install kubectl
          command: |
            curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
            chmod +x ./kubectl
            mv kubectl /usr/local/bin/kubectl

      - run:
          name: Apply deployment
          command: |
            kubectl apply -f kubernetes_config/postgres.yaml
            cat kubernetes_config/solidus.yaml | sed "s|\$IMAGE_NAME|${HOSTNAME}/${GOOGLE_PROJECT_ID}\/solidus-runtime:${CIRCLE_SHA1}|" | kubectl apply -f -

workflows:
  version: 2
  build_and_push:
    jobs:
      - build
      - run_tests:
          requires:
            - build
      - build_and_push_runtime_image:
          requires:
            - run_tests
      - wait_for_deploy_trigger:
         type: approval
         requires:
           - build_and_push_runtime_image
      - deploy:
          requires:
            - wait_for_deploy_trigger
